clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_default_kubernetes_443
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_gwtest_reviews_8080
  type: EDS
endpoints:
- clusterName: kube_gwtest_reviews_8080
  endpoints:
  - lbEndpoints:
    - endpoint:
        address:
          socketAddress:
            address: 10.244.1.11
            portValue: 8080
      loadBalancingWeight: 1
    loadBalancingWeight: 1
listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8080
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: envoy.filters.http.csrf
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.csrf.v3.CsrfPolicy
            filterEnabled:
              defaultValue: {}
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~8080
        statPrefix: http
        useRemoteAddress: true
    name: listener~8080
  name: listener~8080
routes:
- ignorePortInHostMatching: true
  name: listener~8080
  virtualHosts:
  - domains:
    - www.example.com
    name: listener~8080~www_example_com
    routes:
    - match:
        prefix: /
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            csrf:
            - gateway.kgateway.dev/TrafficPolicy/gwtest/my-route-policy
      name: listener~8080~www_example_com-route-0-httproute-my-route-gwtest-0-0-matcher-0
      route:
        cluster: kube_gwtest_reviews_8080
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        envoy.filters.http.csrf:
          '@type': type.googleapis.com/envoy.extensions.filters.http.csrf.v3.CsrfPolicy
          additionalOrigins:
          - exact: www.example.org
          - prefix: pref
          - suffix: suff
          - safeRegex:
              regex: a.b
          filterEnabled:
            defaultValue: {}
            runtimeKey: envoy.csrf.filter_enabled
          shadowEnabled:
            defaultValue:
              numerator: 80
            runtimeKey: envoy.csrf.shadow_enabled
