{{- $gateway := .Values.gateway }}
{{- if $gateway.agentGateway.enabled }}
# TODO(npolshak): look into having agentgateway as a separate helm chart https://github.com/kgateway-dev/kgateway/issues/11240
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kgateway.gateway.fullname" . }}
  labels:
    {{- include "kgateway.gateway.constLabels" . | nindent 4 }}
    {{- include "kgateway.gateway.labels" . | nindent 4 }}
spec:
  {{- if $gateway.replicaCount }}
  replicas: {{ $gateway.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
          {{- include "kgateway.gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with $gateway.extraPodAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kgateway.gateway.selectorLabels" . | nindent 8 }}
        {{- with $gateway.extraPodLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $gateway.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kgateway.gateway.fullname" . }}
      securityContext:
        sysctls:
          - name: net.ipv4.ip_unprivileged_port_start
            value: "0"
      containers:
        - name: agent-gateway
          image: "{{ template "kgateway.gateway.image" $gateway.image }}"
          imagePullPolicy: {{ $gateway.image.pullPolicy }}
          {{- if $gateway.securityContext }}
          securityContext:
            {{- toYaml $gateway.securityContext | nindent 12 }}
          {{- end }} {{/* if $gateway.securityContext */}}
          {{- if $gateway.resources }}
          resources:
            {{- toYaml $gateway.resources | nindent 12 }}
          {{- end }} {{/* if $gateway.resources */}}
          args:
            - -f
            - /config/config.yaml
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: GW_NAME
              value: {{ include "kgateway.gateway.fullname" . }}
            - name: RUST_BACKTRACE
              value: "1"
            - name: RUST_LOG
              value: {{ $gateway.agentGateway.logLevel }}
            - name: XDS_ADDRESS
              value: "http://{{ $gateway.xds.host }}:{{ $gateway.xds.port }}"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GATEWAY
              value: {{ include "kgateway.gateway.fullname" . }}
{{/*            - name: LOCAL_XDS_PATH*/}}
{{/*              value: /config/config.yaml*/}}
            {{- if $gateway.env }}
            {{- toYaml $gateway.env | nindent 12 }}
            {{- end }} {{/* if $gateway.env */}}
          volumeMounts:
            - name: config-volume
              mountPath: /config
            # Make /tmp writeable, needed for pprof
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: config-volume
          configMap:
            {{- if $gateway.agentGateway.customConfigMapName }}
            name: {{ $gateway.agentGateway.customConfigMapName }}
            {{- else }}
            name: {{ include "kgateway.gateway.fullname" . }}
            {{- end }}
        - name: tmp
          emptyDir: {}
      {{- with $gateway.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $gateway.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $gateway.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ $gateway.terminationGracePeriodSeconds }}
      {{- end }}
      {{- with $gateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $gateway.tolerations }}
      tolerations:
        {{- toYaml $gateway.tolerations | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "kgateway.gateway.fullname" . }}
  {{- with (($gateway.serviceAccount).extraAnnotations) }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "kgateway.gateway.constLabels" . | nindent 4 }}
    {{- include "kgateway.gateway.labels" . | nindent 4 }}
    {{- with (($gateway.serviceAccount).extraLabels) }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
automountServiceAccountToken: false
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "kgateway.gateway.fullname" . }}
  {{- with $gateway.service.extraAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "kgateway.gateway.constLabels" . | nindent 4 }}
    {{- include "kgateway.gateway.labels" . | nindent 4 }}
    {{- with $gateway.service.extraLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  type: {{ $gateway.service.type }}
  {{- if $gateway.service.externalTrafficPolicy }}
  externalTrafficPolicy: {{ $gateway.service.externalTrafficPolicy }}
  {{- end }}
  {{- with $gateway.service.clusterIP }}
  clusterIP: {{ . }}
  {{- end }}
  ports:
  {{- range $p := $gateway.ports }}
    - name: {{ $p.name }}
      protocol: {{ $p.protocol }}
      targetPort: {{ $p.port }}
      port: {{ $p.port }}
    {{- if $p.nodePort }}
      nodePort: {{ $p.nodePort }}
    {{- end }}
  {{- end }}
  selector:
    {{- include "kgateway.gateway.selectorLabels" . | nindent 4 }}

{{- if not $gateway.agentGateway.customConfigMapName }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kgateway.gateway.fullname" . }}
  labels:
    {{- include "kgateway.gateway.constLabels" . | nindent 4 }}
    {{- include "kgateway.gateway.labels" . | nindent 4 }}
data:
  config.yaml: |
    config: {}
{{- end }}

{{- end }} {{/* if $gateway.agentGateway.enabled */}}