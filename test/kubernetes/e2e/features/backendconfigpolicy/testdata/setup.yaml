kind: Gateway
apiVersion: gateway.networking.k8s.io/v1
metadata:
  name: gw
spec:
  gatewayClassName: kgateway
  listeners:
    - protocol: HTTP
      port: 8080
      name: http
      allowedRoutes:
        namespaces:
          from: Same
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: example-route
spec:
  parentRefs:
    - name: gw
  hostnames:
    - "example.com"
  rules:
    - backendRefs:
        - name: example-svc
          port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: example-svc
spec:
  selector:
    app.kubernetes.io/name: nginx
  ports:
    - protocol: TCP
      port: 8080
      targetPort: http-web-svc
---
kind: BackendConfigPolicy
apiVersion: gateway.kgateway.dev/v1alpha1
metadata:
  name: example-policy
spec:
  targetRefs:
    - name: example-svc
      group: ""
      kind: Service
  connectTimeout: 5s
  perConnectionBufferLimitBytes: 1024
  tcpKeepalive:
    keepAliveProbes: 3
    keepAliveTime: 30s
    keepAliveInterval: 5s
  commonHttpProtocolOptions:
    idleTimeout: 10s
    maxHeadersCount: 15
    maxStreamDuration: 30s
    maxRequestsPerConnection: 100
  http1ProtocolOptions:
    enableTrailers: true
    overrideStreamErrorOnInvalidHttpMessage: true
---
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: nginx
spec:
  containers:
    - name: nginx
      image: nginx:stable
      ports:
        - containerPort: 80
          name: http-web-svc
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  labels:
    app.kubernetes.io/name: httpbin
    service: httpbin
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/name: httpbin
---
# make sure proxy works with commonHttpProtocolOptions for HTTP backend
kind: BackendConfigPolicy
apiVersion: gateway.kgateway.dev/v1alpha1
metadata:
  name: httpbin-policy
spec:
  targetRefs:
    - name: httpbin
      group: ""
      kind: Service
  commonHttpProtocolOptions:
    idleTimeout: 11s
    maxHeadersCount: 16
    maxStreamDuration: 31s
    maxRequestsPerConnection: 101
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin-h2c
  labels:
    app.kubernetes.io/name: httpbin-h2c
    service: httpbin-h2c
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      appProtocol: kubernetes.io/h2c
  selector:
    app.kubernetes.io/name: httpbin-h2c
---
# make sure proxy works with commonHttpProtocolOptions for HTTP2 backend
kind: BackendConfigPolicy
apiVersion: gateway.kgateway.dev/v1alpha1
metadata:
  name: httpbin-h2c-policy
spec:
  targetRefs:
    - name: httpbin-h2c
      group: ""
      kind: Service
  commonHttpProtocolOptions:
    idleTimeout: 12s
    maxHeadersCount: 17
    maxStreamDuration: 32s
    maxRequestsPerConnection: 102
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: httpbin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: httpbin
      version: v1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: httpbin
        version: v1
    spec:
      serviceAccountName: httpbin
      containers:
        - image: docker.io/mccutchen/go-httpbin:v2.6.0
          imagePullPolicy: IfNotPresent
          name: httpbin
          command: [ go-httpbin ]
          args:
            - "-port"
            - "8080"
            - "-max-duration"
            - "600s" # override default 10s
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m"
            limits:
              cpu: "200m"
